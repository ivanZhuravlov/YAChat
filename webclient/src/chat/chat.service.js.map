{"version":3,"sources":["chat.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAE3C,gDAA8C;AAE9C,iEAA+D;AAE/D,+BAA8B;AAK9B;IAYI,qBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QACxC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;oBAfQ,WAAW;IAiBb,8BAAQ,GAAf;QACI,IAAI,CAAC,UAAU;YACX,IAAI,CAAC,EAAE,CAAI,aAAW,CAAC,aAAa,UAAO,EAC3C;gBACI,YAAY,EAAE,IAAI;gBAClB,iBAAiB,EAAE,IAAI;aAC1B,CAAC,CAAC;QAEP,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAEM,6BAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,WAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7E,CAAC;IA7BM,sBAAU,GAAW,EAAE,CAAC;IAE/B,oFAAoF;IAC7E,yBAAa,GAAW,sBAAoB,aAAW,CAAC,UAAY,CAAC;IAJnE,WAAW;QADvB,iBAAU,EAAE;yCAawB,0BAAW;OAZnC,WAAW,CA+BvB;IAAD,kBAAC;;CA/BD,AA+BC,IAAA;AA/BY,kCAAW","file":"chat.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { UserService } from '../user.service';\n\nimport '../../node_modules/socket.io-client/dist/socket.io.js';\n\nimport { Chat } from './chat';\n\ndeclare let window: any;\n\n@Injectable()\nexport class ChatService {\n    static serverPort: number = 81;\n\n    // static serverAddress: string = `http://192.168.99.100:${ChatService.serverPort}`;\n    static serverAddress: string = `http://localhost:${ChatService.serverPort}`;\n\n    private chatSocket: any;\n\n    private chat: Chat;\n\n    private io: any;\n\n    constructor(private userService: UserService) {\n        this.io = window.io;\n        this.activate();\n    }\n\n    public activate(): void {\n        this.chatSocket =\n            this.io(`${ChatService.serverAddress}/chat`,\n            {\n                reconnection: true,\n                reconnectionDelay: 1000\n            });\n        \n        this.chat = this.getChat();     \n    }\n\n    public getChat(): Chat {\n        return this.chat || new Chat(this.chatSocket, this.userService.username);\n    }\n}"]}